{"version":3,"sources":["Game.js"],"names":["direction","require","cc","Class","extends","Component","properties","starPrefab","default","type","Prefab","maxStarDuration","minStarDuration","ground","Node","player","scoreDisplay","Label","scoreAudio","AudioClip","left","right","hastart","smallcanvas","jump","flower","board","onLoad","director","getCollisionManager","enabled","groundY","y","height","timer","starDuration","score","spawnNewStar","newStar","instantiate","node","addChild","setPosition","getNewStarPosition","getComponent","game","Math","random","spawnNewBoard","newBoard","randY","jumpHeight","maxX","width","randX","v2","gainScore","string","audioEngine","play","update","dt","gameOver","stopAllActions","xSpeed","setLandscape","sys","isNative","os","OS_ANDROID","jsb","reflection","callStaticMethod","OS_IOS","view","setOrientation","macro","ORIENTATION_LANDSCAPE","start"],"mappings":"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","file":"Game.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["const direction = require('Global')\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // 引用了星星预制资源\r\n        starPrefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        // 星星产生后消失时间的随机范围\r\n        maxStarDuration: 0,\r\n        minStarDuration: 0,\r\n        // 地面节点，用于确定星星生成的高度\r\n        ground: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        // 用于获取主角弹跳的高度，和控制主角行动开关\r\n        player: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        // score label的引用\r\n        scoreDisplay: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        scoreAudio: {\r\n            default: null,\r\n            type: cc.AudioClip\r\n        },\r\n        left: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        right: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        hastart: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        smallcanvas: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        jump: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        flower: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        board: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        }\r\n    },\r\n    onLoad() {\r\n        // cc.view.setFrameSize(document.body.clientWidth,document.body.clientHeight);\r\n        // 开启碰撞检测\r\n        cc.director.getCollisionManager().enabled = true\r\n        // 获取地面的y轴坐标\r\n        this.groundY = this.ground.y + this.ground.height / 2\r\n        this.timer = 0;\r\n        this.starDuration = 0;\r\n        // 初始化计分\r\n        this.score = 0;\r\n        this.spawnNewStar()\r\n    },\r\n    spawnNewStar() {\r\n        // 使用给定的模板再场景中生成一个新的节点\r\n        const newStar = cc.instantiate(this.starPrefab)\r\n        // 将新增的节点添加到Canvas节点下面\r\n        this.node.addChild(newStar)\r\n        // 为星星设置一个随机位置\r\n        newStar.setPosition(this.getNewStarPosition())\r\n        // 在星星组件上暂存Game对象的引用\r\n        newStar.getComponent('Star').game = this;\r\n        this.player.getComponent('Player').jump = this.jump\r\n        this.flower.getComponent('Button').game = this\r\n        // 重置计时器，根据消失事件范围随机取一个值\r\n        this.starDuration = this.minStarDuration + Math.random() * (this.maxStarDuration - this.minStarDuration);\r\n        this.timer = 0;\r\n    },\r\n    // 生成游戏规则\r\n    spawnNewBoard() {\r\n        // 使用给定的模板再场景中生成一个新的节点\r\n        const newBoard = cc.instantiate(this.board)\r\n        // 将新增的节点添加到Canvas节点下面\r\n        this.node.addChild(newBoard)\r\n    },\r\n    getNewStarPosition() {\r\n        let randY = this.groundY + Math.random() * this.player.getComponent('Player').jumpHeight + 40\r\n        let maxX = this.smallcanvas.width / 2\r\n        let randX = (Math.random() - 0.5) * 2 * maxX\r\n        return cc.v2(randX, randY)\r\n    },\r\n    gainScore() {\r\n        this.score += 1;\r\n        // 更新 scoreDisplay Label 的文字\r\n        this.scoreDisplay.string = 'Torch: ' + this.score;\r\n        cc.audioEngine.play();\r\n    },\r\n    update(dt) {\r\n        if (this.timer > this.starDuration) {\r\n            this.gameOver();\r\n            return;\r\n        }\r\n        this.timer += dt;\r\n    },\r\n    gameOver() {\r\n        const hastart = cc.instantiate(this.hastart)\r\n        // 停止player节点的跳跃动作\r\n        this.player.stopAllActions() //停止 player 节点的跳跃动作\r\n        hastart.getComponent('Start').game = this;\r\n        hastart.setPosition(cc.v2(0, -250))\r\n        this.node.addChild(hastart)\r\n        direction.xSpeed = 0\r\n    },\r\n    // 横屏显示\r\n    setLandscape() {\r\n            if (cc.sys.isNative && cc.sys.os === cc.sys.OS_ANDROID) {\r\n                jsb.reflection.callStaticMethod(\"org/cocos2dx/javascript/AppActivity\",\r\n                \"changeOrientation\", \"(I)V\", 0); //0横1竖\r\n            }else if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\r\n                jsb.reflection.callStaticMethod(\"IOSHelper\", \"changeOrientation:\", 0);\r\n            }else {\r\n                cc.view.setOrientation(cc.macro.ORIENTATION_LANDSCAPE);\r\n            }\r\n            // cc.view.setFrameSize(document.body.clientWidth,document.body.clientHeight);\r\n        //     let width = cc.view.getFrameSize().height < cc.view.getFrameSize().width ?\r\n        //     cc.view.getFrameSize().width : cc.view.getFrameSize().height;\r\n        //     let height = cc.view.getFrameSize().height > cc.view.getFrameSize().width ?\r\n        //     cc.view.getFrameSize().width : cc.view.getFrameSize().height;\r\n        //     cc.view.setFrameSize(width, height);\r\n        //     cc.view.setDesignResolutionSize(width, height, cc.ResolutionPolicy.FIXED_WIDTH);\r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}